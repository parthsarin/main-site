{"version":3,"sources":["Footer.js","SidebarWidgets.js","App.js","serviceWorker.js","index.js","NoMobile.js"],"names":["Footer","props","react_default","a","createElement","className","Description","focus","EdgeDescription","NodeDescription","Instructions","tagline","nodes","require","edge","find","source","target","node","id","desc","description","blurb","push","Card_default","Text","key","history","sentences","i","length","sentence","original","translations","map","translation","attribution","sourceColor","colorFocus","targetColor","label","Body","href","edges","adjacentEdges","filter","App","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","graphWidth","focused","focusTarget","document","getElementById","offsetWidth","setState","nodeId","graphConfig","_this2","data","links","assign","height","window","innerHeight","width","Row_default","noGutters","Col_default","md","lib","onClickLink","handleLinkClick","onClickGraph","handleGraphClick","onClickNode","handleNodeClick","config","Container_default","React","Component","Boolean","location","hostname","match","innerWidth","ReactDOM","render","src","alt","App_App","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.eb3038c1.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nexport default function Footer(props) {\r\n\treturn (\r\n\t\t<div className=\"bottom-row\">\r\n\t\t\t<hr />\r\n\t\t\t<p>Special thanks to Gueverly Mendez for inspiring this project by commenting that a Python script I'd written \"looks like Chinese.\"</p>\r\n\t\t\t<p>Made with {\"<3\"} by Parth Sarin.</p>\r\n\t\t</div>\r\n\t);\r\n}","import React from 'react';\r\n\r\nimport Card from 'react-bootstrap/Card';\r\n\r\nexport function Description(props) {\r\n\tconst focus = props.focus;\r\n\r\n\tif (\"edge\" in focus) {\r\n\t\treturn <EdgeDescription focus={focus} />;\r\n\t}\r\n\r\n\telse if (\"node\" in focus) {\r\n\t\treturn <NodeDescription focus={focus} />\r\n\t}\r\n}\r\n\r\nexport function Instructions(props) {\r\n\treturn (\r\n\t\t<div className=\"instructions\">\r\n\t\t\t<p>To describe something that is confusing and seems like gibberish, English speakers often use the idiom <b>\"It looks/sounds like Greek to me.\"</b> The implication is that Greek is an obscure, indecipherable language. Hearing this, one might naturally think that this cannot possibly be an idiom in Greek! </p>\r\n\t\t\t<p>In fact, there is an analogous saying in Greek: <b>\"Αυτά μου φαίνονται κινέζικα,\"</b> or \"This strikes me as Chinese.\" To Greek speakers, Chinese is stereotypically an obscure and indecipherable language! Many languages have idioms in this vein. They're represented here in the graph to the left.</p>\r\n\t\t\t<p>An arrow from language A to language B means that there is an idiom in language A which indicates that language B is gibberish. Where possible, I've documented the history and sentences that characterize each of the relations in the graph. Clicking on a link or node will replace this column with data about that language or relation.</p>\r\n\t\t\t<p className=\"lead\">Enjoy!</p>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nfunction EdgeDescription(props) {\r\n\tconst focus = props.focus;\r\n\r\n\tconst nodes = require('./nodes.json');\r\n\tconst edges = require('./edges.json');\r\n\r\n\tconst edge = edges.find( (edge) => (edge.source === focus.source) && (edge.target === focus.target) );\r\n\tconst source = nodes.find( (node) => (node.id === edge.source) );\r\n\tconst target = nodes.find( (node) => (node.id === edge.target) );\r\n\r\n\tconst desc = edge.description;\r\n\tvar description = [];\r\n\tif (desc) {\r\n\t\tif (desc.blurb) { \r\n\t\t\tdescription.push(<Card.Text key={'blurb-'+source.id+'-'+source.target}>{desc.blurb}</Card.Text>); \r\n\t\t}\r\n\r\n\t\tif (desc.history) {\r\n\t\t\tdescription.push(<h4 key={'history-'+source.id+'-'+source.target}>History</h4>);\r\n\t\t\tdescription.push(<Card.Text key={'history-content-'+source.id+'-'+source.target}>{desc.history}</Card.Text>);\r\n\t\t}\r\n\r\n\t\tif (desc.sentences) {\r\n\t\t\tdescription.push(<h4 key={'quote-'+source.id+'-'+source.target}>Quotes</h4>);\r\n\t\t\tfor (var i = 0; i < desc.sentences.length; i++) {\r\n\t\t\t\tconst sentence = desc.sentences[i];\r\n\t\t\t\tdescription.push(\r\n\t\t\t\t\t<div className=\"mb-2 quote\" key={'quote-'+i+'-'+source.id+'-'+source.target}>\r\n\t\t\t\t\t\t<p className=\"mb-0\">{ sentence.original }</p>\r\n\t\t\t\t\t\t{ sentence.translations.map((translation) => <p className=\"mb-0\" key={translation}>{ translation }</p> ) }\r\n\t\t\t\t\t\t{ sentence.attribution && <footer className=\"blockquote-footer\">{ sentence.attribution }</footer> }\r\n\t\t\t\t\t</div>\r\n\t\t\t\t)\r\n\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tlet tagline;\r\n\tif (\"colorFocus\" in props) {\r\n\t\t// make a particular language green\r\n\t\tconst sourceColor = (source.id === props.colorFocus.id) ? 'text-success' : 'text-secondary';\r\n\t\tconst targetColor = (target.id === props.colorFocus.id) ? 'text-success' : 'text-secondary';\r\n\r\n\t\ttagline = <h2><span className={sourceColor}>{ source.label }</span> &rarr; <span className={targetColor}>{ target.label }</span></h2>;\r\n\t} else {\r\n\t\ttagline = <h2><span className=\"text-secondary\">{ source.label }</span> &rarr; <span className=\"text-info\">{ target.label }</span></h2>;\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className=\"edgeDescription\" id={ edge.source + \"-\" + edge.target }>\r\n\t\t\t{ tagline }\r\n\t\t\t{ desc && (\r\n\t\t\t\t<Card className=\"language-card\">\r\n\t\t\t\t\t<Card.Body>\r\n\t\t\t\t\t\t{description}\r\n\t\t\t\t\t</Card.Body>\r\n\t\t\t\t</Card>\r\n\t\t\t) }\r\n\t\t\t{ !desc && <p>No data yet... Email <a href='mailto:contact@parthsarin.com'>contact@parthsarin.com</a> to suggest an addition.</p> }\r\n\t\t\t\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nfunction NodeDescription(props) {\r\n\tconst focus = props.focus;\r\n\r\n\tconst nodes = require('./nodes.json');\r\n\tconst edges = require('./edges.json');\r\n\r\n\tconst node = nodes.find( (node) => node.id === focus.id );\r\n\tconst adjacentEdges = edges.filter( (edge) => (edge.source === node.id) || (edge.target === node.id) );\r\n\r\n\treturn (\r\n\t\t<div className=\"nodeDescription\" id={ node.id }>\r\n\t\t\t<h1 className=\"text-center text-success\">{ node.label }</h1>\r\n\t\t\t{ \"description\" in node && <p>{ node.description }</p> }\r\n\t\t\t{ adjacentEdges.map((edge) => {\r\n\t\t\t\tif (edge.description) {\r\n\t\t\t\t\treturn <EdgeDescription focus={{ source: edge.source, target: edge.target }} colorFocus={ node } key={edge.source + edge.target} />;\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn null;\r\n\t\t\t  }) }\r\n\t\t</div>\r\n\t)\r\n}","import React from 'react';\r\n\r\nimport Footer from './Footer';\r\nimport { Description, Instructions } from './SidebarWidgets';\r\n\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Container from 'react-bootstrap/Container';\r\n\r\nimport { Graph } from 'react-d3-graph';\r\n\r\nexport default class App extends React.Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\r\n\t\tthis.state = {\r\n\t\t\tgraphWidth: 0,\r\n\t\t\tfocused: false,\r\n\t\t\tfocusTarget: null\r\n\t\t}\r\n\t}\r\n\r\n\tcomponentDidMount() {\r\n\t\tconst graphWidth = document.getElementById('graph-container').offsetWidth;\r\n\t\tthis.setState({ graphWidth });\r\n\t}\r\n\r\n\thandleLinkClick(source, target) {\r\n\t\tthis.setState({\r\n\t\t\tfocused: true,\r\n\t\t\tfocusTarget: {\r\n\t\t\t\tedge: true,\r\n\t\t\t\tsource: source,\r\n\t\t\t\ttarget: target\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\thandleGraphClick() {\r\n\t\tthis.setState({\r\n\t\t\tfocused: false,\r\n\t\t\tfocusTarget: null\r\n\t\t});\r\n\t}\r\n\r\n\thandleNodeClick(nodeId) {\r\n\t\tthis.setState({ \r\n\t\t\tfocused: true,\r\n\t\t\tfocusTarget: {\r\n\t\t\t\tnode: true,\r\n\t\t\t\tid: nodeId\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\trender() {\r\n\t\tconst edges = require('./edges.json');\r\n\t\tconst nodes = require('./nodes.json');\r\n\r\n\t\tconst data = {\r\n\t\t\tlinks: edges,\r\n\t\t\tnodes: nodes\r\n\t\t};\r\n\r\n\t\t// config data\r\n\t\tlet graphConfig;\r\n\t\tif (this.state.graphWidth) {\r\n\t\t\tgraphConfig = require('./graphConfig.json');\r\n\t\t\tgraphConfig = Object.assign({}, graphConfig, {\r\n\t\t\t\theight: window.innerHeight,\r\n\t\t\t\twidth: this.state.graphWidth\r\n\t\t\t});\r\n\t\t}\r\n\t\t\r\n\r\n\t\treturn (\r\n\t\t\t<Row id=\"app-main\" noGutters={true}>\r\n\t\t\t\t<Col md={8} id=\"graph-container\" className=\"graph-column\">\r\n\t\t\t\t\t<Graph\r\n\t\t\t\t\t\tid=\"incomprehensible-lang-graph\"\r\n\t\t\t\t\t\tdata={ data }\r\n\t\t\t\t\t\tonClickLink={ (source, target) => this.handleLinkClick(source, target) }\r\n\t\t\t\t\t\tonClickGraph={ () => this.handleGraphClick() }\r\n\t\t\t\t\t\tonClickNode={ (nodeId) => this.handleNodeClick(nodeId) }\r\n\t\t\t\t\t\tconfig={ graphConfig }\r\n\t\t\t\t\t/>\r\n\t\t\t\t</Col>\r\n\t\t\t\t<Col md={4} className=\"sidebar-column\">\r\n\t\t\t\t\t<Container className=\"sidebar-container\">\r\n\t\t\t\t\t\t<h1 className=\"display-4\">Stereotypical <span className=\"text-warning\">Gibberish</span></h1>\r\n\t\t\t\t\t\t{ this.state.focused && <Description focus={ this.state.focusTarget } /> }\r\n\t\t\t\t\t\t{ !this.state.focused && <Instructions /> }\r\n\t\t\t\t\t\t<div id=\"spacer\"></div>\r\n\t\t\t\t\t\t<Footer />\r\n\t\t\t\t\t</Container>\r\n\t\t\t\t</Col>\r\n\t\t\t</Row>\r\n\t\t);\r\n\t}\r\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport NoMobile from './NoMobile';\nimport * as serviceWorker from './serviceWorker';\n\nconst isMobile = window.innerWidth <= 768;\nif (isMobile) {\n\tReactDOM.render(<NoMobile />, document.getElementById('root'));\n} else {\n\tReactDOM.render(<App />, document.getElementById('root'));\n}\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import React from 'react';\n\nimport Row from 'react-bootstrap/Row';\nimport Container from 'react-bootstrap/Container';\n\nexport default function NoMobile(props) {\n\treturn (\n\t\t<Row className=\"no-mobile h-100\" noGutters={true}>\n\t\t\t<Container className=\"my-auto\">\n\t\t\t\t<h1>Stereotypical <span className=\"text-warning\">Gibberish</span></h1>\n\t\t\t\t<img\n\t\t\t\t\tsrc=\"https://emojipedia-us.s3.dualstack.us-west-1.amazonaws.com/thumbs/320/twitter/147/mobile-phone_1f4f1.png\"\n\t\t\t\t\talt=\"Mobile Phone\"\n\t\t\t\t/>\n\t\t\t\t<h2>Switch to Desktop</h2>\n\t\t\t\t<p className=\"lead\">You can't run this application on mobile... yet!</p>\n\t\t\t</Container>\n\t\t</Row>\n\t);\n}\n"],"sourceRoot":""}